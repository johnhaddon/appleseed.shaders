OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
shader as_glossy_surface
param	normal	Nn	0 0 0		 %read{4,7} %write{0,0}
param	vector	T	0 0 0		 %read{7,7} %write{1,1}
param	float	ks	1		 %read{5,8} %write{2147483647,-1}
param	color	col	1 1 1		 %read{5,8} %write{2147483647,-1}
param	string	distribution	"specular"		 %read{2,7} %write{2147483647,-1}
param	float	xroughness	0.015		 %read{7,7} %write{2147483647,-1}
param	float	yroughness	0.015		 %read{7,7} %write{2147483647,-1}
oparam	closure color	BRDF			 %read{2147483647,-1} %write{6,9}
global	normal	N	 %read{0,0} %write{2147483647,-1}
global	vector	dPdu	 %read{1,1} %write{2147483647,-1}
const	string	$const1	"specular"		 %read{2,2} %write{2147483647,-1}
temp	int	$tmp1	 %read{3,3} %write{2,2}
temp	closure color	$tmp2	 %read{6,6} %write{4,4}
const	string	$const2	"reflection"		 %read{4,4} %write{2147483647,-1}
temp	color	$tmp3	 %read{6,6} %write{5,5}
temp	closure color	$tmp4	 %read{9,9} %write{7,7}
const	float	$const4	1		 %read{7,7} %write{2147483647,-1}
const	int	$const5	0		 %read{7,7} %write{2147483647,-1}
const	string	$const6	"microfacet"		 %read{7,7} %write{2147483647,-1}
temp	color	$tmp5	 %read{9,9} %write{8,8}
code Nn
# as_glossy_surface.osl:30
#     normal                  Nn = N,
	assign		Nn N 	%filename{"as_glossy_surface.osl"} %line{30} %argrw{"wr"}
code T
# as_glossy_surface.osl:31
#     vector                  T = dPdu,
	assign		T dPdu 	%filename{"as_glossy_surface.osl"} %line{31} %argrw{"wr"}
code ___main___
# as_glossy_surface.osl:39
#     if (distribution == "specular")
	eq		$tmp1 distribution $const1 	%filename{"as_glossy_surface.osl"} %line{39} %argrw{"wrr"}
	if		$tmp1 7 10 	%argrw{"r"}
# as_glossy_surface.osl:40
#         BRDF = ks * col * reflection(Nn);
	closure		$tmp2 $const2 Nn 	%line{40} %argrw{"wrr"}
	mul		$tmp3 ks col 	%argrw{"wrr"}
	mul		BRDF $tmp2 $tmp3 	%argrw{"wrr"}
# as_glossy_surface.osl:42
#         BRDF = ks * col * microfacet(distribution, Nn, T, xroughness, yroughness, 1, 0);
	closure		$tmp4 $const6 distribution Nn T xroughness yroughness $const4 $const5 	%line{42} %argrw{"wrrrrrrrr"}
	mul		$tmp5 ks col 	%argrw{"wrr"}
	mul		BRDF $tmp4 $tmp5 	%argrw{"wrr"}
	end

OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
shader as_glossy_surface
param	vector	Normal	0 0 0		%read{4,7} %write{0,0} %initexpr
param	vector	Tangent	0 0 0		%read{7,7} %write{1,1} %initexpr
param	float	Specular	1		%meta{string,help,"Reflectivity"} %meta{float,min,0} %meta{float,max,1}  %read{5,8} %write{2147483647,-1}
param	color	Color	0.80000001 0.80000001 0.80000001		%read{5,8} %write{2147483647,-1}
param	string	Distribution	"specular"		%meta{string,help,"Microfacet distribution to use: Specular, Beckmann or GGX."} %meta{string,widget,"mapper"} %meta{string,options,"Specular:0|Beckmann:1|GGX:2"}  %read{2,7} %write{2147483647,-1}
param	float	RoughnessX	0.015		%read{7,7} %write{2147483647,-1}
param	float	RoughnessY	0.015		%read{7,7} %write{2147483647,-1}
oparam	closure color	BRDF			%read{2147483647,-1} %write{6,9}
global	normal	N	%read{0,0} %write{2147483647,-1}
global	vector	dPdu	%read{1,1} %write{2147483647,-1}
const	string	$const1	"specular"		%read{2,2} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
temp	closure color	$tmp2	%read{6,6} %write{4,4}
const	string	$const2	"reflection"		%read{4,4} %write{2147483647,-1}
temp	color	$tmp3	%read{6,6} %write{5,5}
temp	closure color	$tmp4	%read{9,9} %write{7,7}
const	float	$const4	1		%read{7,7} %write{2147483647,-1}
const	int	$const5	0		%read{7,7} %write{2147483647,-1}
const	string	$const6	"microfacet"		%read{7,7} %write{2147483647,-1}
temp	color	$tmp5	%read{9,9} %write{8,8}
code Normal
# as_glossy_surface.osl:37
#     vector Normal = N,
	assign		Normal N 	%filename{"as_glossy_surface.osl"} %line{37} %argrw{"wr"}
code Tangent
# as_glossy_surface.osl:38
#     vector Tangent = dPdu,
	assign		Tangent dPdu 	%filename{"as_glossy_surface.osl"} %line{38} %argrw{"wr"}
code ___main___
# as_glossy_surface.osl:56
#     if (Distribution == "specular")
	eq		$tmp1 Distribution $const1 	%filename{"as_glossy_surface.osl"} %line{56} %argrw{"wrr"}
	if		$tmp1 7 10 	%argrw{"r"}
# as_glossy_surface.osl:57
#         BRDF = Specular * Color * reflection(Normal);
	closure		$tmp2 $const2 Normal 	%line{57} %argrw{"wrr"}
	mul		$tmp3 Specular Color 	%argrw{"wrr"}
	mul		BRDF $tmp2 $tmp3 	%argrw{"wrr"}
# as_glossy_surface.osl:59
#         BRDF = Specular * Color * microfacet(Distribution, Normal, Tangent, RoughnessX, RoughnessY, 1, 0);
	closure		$tmp4 $const6 Distribution Normal Tangent RoughnessX RoughnessY $const4 $const5 	%line{59} %argrw{"wrrrrrrrr"}
	mul		$tmp5 Specular Color 	%argrw{"wrr"}
	mul		BRDF $tmp4 $tmp5 	%argrw{"wrr"}
	end
